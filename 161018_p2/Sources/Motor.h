/*
 * Motor.h
 *
 *  Created on: 09/10/2016
 *      Author: Alexis
 */

#ifndef MOTOR_H_
#define MOTOR_H_

#include "MK64F12.h"
#include "DataTypeDefinitions.h"
#include "FlexTimer.h"

#define PWM_MOD_VALUE 0x00FF
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*
 	 \param[in]    void
 	 \return void
 */
void motorConfig();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*
 	 \param[in]    void
 	 \return void
 */
void MotorEnable();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*
 	 \param[in]    void
 	 \return void
 */
void MotorDisable();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*
 	 \param[in]    sint16 channelValue
 	 \return void
 */
void Mod_DutyCycle(sint16 channelValue);
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*   controlador de motor con los FTM
 	 \param[in]    void
 	 \return void
 */
void MotorControler();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*   valor duty cycle
 	 \param[in]    void
 	 \return void
 */
uint16 DutyCycleValue();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*  multiplicador del ciclo de trabajo
 	 \param[in]    void
 	 \return void
 */
uint8 multiplierDutyCycleValue();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*
 	 \param[in]    void
 	 \return void
 */
void  multiplierDutyCycleModifier(sint8 value);
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*  bandera estado motor
 	 \param[in]    void
 	 \return uint8 flag
 */
uint8 flagStateMotorState();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*  bandera estado motor
 	 \param[in]    uint8 State
 	 \return void
 */
void flagStateMotorModifier(uint8 State);
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*
 	 \param[in]   uint8 VALUE
 	 \return void
 */
void manualDutyCycleModifier(sint8 value);
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*
 	 \param[in]    void
 	 \return void
 */
uint8 manualDutyCycleValue();

#endif /* MOTOR_H_ */
