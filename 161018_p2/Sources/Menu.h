/*
 * Menu.h
 *
 *  Created on: 08/10/2016
 *      Author: Alexis
 */

#ifndef SOURCES_MENU_H_
#define SOURCES_MENU_H_
#include "MK64F12.h"
#include "SPI.h"
#include "LCDNokia5110.h"
#include "ADC.h"
#include "GPIO.h"
#include "FlexTimer.h"
#include "Motor.h"
#include "math.h"

typedef enum {
	SAME_STATE,
	NEXT_STATE,
}TransitionType;

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /* Configurar los pines
 	 \param[in]    void
 	 \return void
 */
void Configuration_Menu();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /* display motor
 	 \param[in]    void
 	 \return void
 */
void Screen_Machine();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /* Pantalla principal
 	 \param[in]    void
 	 \return TransitionType SAME_STATE o NEXT_STATE
 */
TransitionType Main_Screen();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*  Menu screen
 	 \param[in]    void
 	 \return TransitionType SAME_STATE o NEXT_STATE
 */
TransitionType Menu_Screen();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /* Menu screen
 	 \param[in]    void
 	 \return TransitionType SAME_STATE o NEXT_STATE
 */
TransitionType Alarm_Screen();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*  Despliega formato
 	 \param[in]    void
 	 \return TransitionType SAME_STATE o NEXT_STATE
 */
TransitionType Format_Screen();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /* Despliega decremento
 	 \param[in]    void
 	 \return TransitionType SAME_STATE o NEXT_STATE
 */
TransitionType Decrement_Screen();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /* Para controlar manualmente el motor
 	 \param[in]    void
 	 \return TransitionType SAME_STATE o NEXT_STATE
 */
TransitionType MControl_Screen();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /*  Mostrar la frecuencia
 	 \param[in]    void
 	 \return TransitionType SAME_STATE o NEXT_STATE
 */
TransitionType Frecuency_Screen();
/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 /* Convierte binario a BCD porque hay que mostrar cada caracter en su respectivo lugar
 	 \param[in]  char * temp  Se manda un arreglo con la palabra
 	 \param[in]  float binary
 	 \param[in]  uint8 decimals
 	 \return void
 */
void BinaryToBCD(char * temp, float binary,uint8 decimals);


#endif /* SOURCES_MENU_H_ */
